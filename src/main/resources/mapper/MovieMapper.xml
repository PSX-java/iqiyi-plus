<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.psx.mapper.MovieMapper">
    <resultMap type="com.psx.model.Movie" id="movieMap">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="director" column="director" />
        <result property="time_length" column="time_length" />
        <result property="pub_date" column="pub_date" />
        <result property="description" column="description" />
        <result property="rating" column="rating" />
        <result property="pic" column="pic" />

        <collection  property="typeList"  ofType="com.psx.model.Type">
            <id property="id" column="cid" />
            <result property="catname" column="catname" />
        </collection>

        <collection  property="actors"  ofType="com.psx.model.Actor">
            <id property="id" column="aid" />
            <result property="name" column="aname" />
            <result property="birthday" column="abirthday" />
            <result property="sex" column="asex" />
            <result property="description" column="adescription" />
            <result property="pic" column="apic" />
        </collection>
    </resultMap>

    <select id="findById" resultMap="movieMap">
        select m.*,a.id aid,a.name aname,a.birthday abirthday,a.sex
            asex,a.description adescription, a.pic apic,
            t.id tid,t.movietype tmovietype
        from
            movie m
        left join
            movie_actor ma
        on
            m.id=ma.movieid
        left join
            actor a
        on
            ma.actorid=a.id
        left join
            movie_type mc
        on
            m.id=mc.movieid
        left join
            type t
        on mc.typeid=t.id
        where m.id = #{id}
    </select>


    <select id="findAll" resultMap="movieMap">
        select
            m.*,
            a.id aid,a.name aname,a.birthday abirthday,a.sex
            asex,a.description adescription, a.pic apic,
            t.id tid, t.movietype movietype
        from
            movie m
        left join
            movie_actor ma
        on
            m.id=ma.movieid
        left join
            actor a
        on
            ma.actorid=a.id
        left join
            movie_type mc
        on
            m.id=mc.movieid
        left join
            type t
        on mc.typeid=t.id
    </select>


    <select id="findTop3ByTypes" resultMap="movieMap">
        select
        m.*,
        a.id aid,a.name aname,a.birthday abirthday,a.sex
        asex,a.description adescription, a.pic apic,
        t.id tid, t.movietype movietype
        from
        movie m
        left join
        movie_actor ma
        on
        m.id=ma.movieid
        left join
        actor a
        on
        ma.actorid=a.id
        left join
        movie_type mc
        on
        m.id=mc.movieid
        left join
        type t
        on mc.typeid=t.id
        where m.id != #{id} and m.id in (
            select mcate.movieid from movie_type mcate
						where mcate.movieid != #{id} and mcate.typeid in (
                select mcc.id from movie mm
                left join movie_type mcc on mcc.movieid = mm.id
                where mm.id = #{id}
            )
        )
        order by m.release_date desc
		LIMIT 0, 3
    </select>

    <insert id="saveMovie" parameterType="com.psx.model.Movie">
        insert into movie (name, pic, description, pub_date, time_length, director)
        values (#{name},#{pic}, #{description}, #{pub_date},
        #{time_length}, #{director})
        <selectKey resultType="Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <select id="findTop3ByActors" resultMap="movieMap">
        select
        m.*,
        a.id aid,a.name aname,a.birthday abirthday,a.sex
        asex,a.description adescription, a.pic apic,
        t.id tid, t.movietype movietype
        from
        movie m
        left join
        movie_actor ma
        on
        m.id=ma.movieid
        left join
        actor a
        on
        ma.actorid=a.id
        left join
        movie_type mc
        on
        m.id=mc.movieid
        left join
        type t
        on mc.typeid=t.id
        where m.id != #{id} and  m.id in (
            select mac.movieid from movie_actor mac
            where mac.movieid != #{id} and mac.actorid in (
            # 查询这个电影的所有演员的id
            select acc.id from actor acc
            left join movie_actor macc on macc.actorid = acc.id
            where macc.movieid = #{id}
            )
        )
        order by m.release_date desc
        LIMIT 0, 3
    </select>
</mapper>
